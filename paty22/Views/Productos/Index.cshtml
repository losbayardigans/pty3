@model IEnumerable<paty22.Models.Producto>

@using System.Linq

<style>
    /* Barra de búsqueda */
    .search-bar {
        display: flex;
        justify-content: center;
        margin: 20px 0;
    }

    .search-input {
        width: 50%;
        padding: 10px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f9f9f9;
        color: #333;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

        .search-input:focus {
            border-color: #666;
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
            outline: none;
        }

    /* Menú desplegable */
    .categorias-dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-button {
        background-color: #333;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .dropdown-button:hover {
            background-color: #555;
        }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #fff;
        min-width: 180px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1;
        border-radius: 8px;
        overflow: hidden;
    }

        .dropdown-content div {
            padding: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            color: #333;
        }

            .dropdown-content div:hover {
                background-color: #333;
                color: white;
            }

        .dropdown-content .active {
            font-weight: bold;
            background-color: #333;
            color: white;
        }

    .show {
        display: block;
    }

    /* Cartas de productos */
    .producto {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        background: #f9f9f9;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .producto:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

    /* Título y textos */
    h1 {
        color: #333;
        text-align: center;
        margin-bottom: 20px;
    }

    .carta-title {
        color: #000;
        font-weight: 600;
    }

    .carta-text {
        color: #666;
    }

    /* Botón */
    .btn {
        background-color: #333;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 10px 15px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .btn:hover {
            background-color: #555;
        }

    /* Indicador de productos vacíos */
    .no-products-message {
        text-align: center;
        margin: 20px 0;
        color: #777;
        font-size: 1.2rem;
    }
</style>

<!-- Barra de búsqueda -->
<div class="search-bar">
    <input type="text" id="searchInput" class="search-input" placeholder="Buscar productos...">
</div>

<!-- Enlace al carrito -->
<div class="text-right mb-4">
    <a href="@Url.Action("Carrito", "Carro")" class="btn btn-primary">Ver mi carrito</a>
</div>

<h1>Productos</h1>

<!-- Menú desplegable de categorías -->
<div class="categorias-dropdown">
    <button class="dropdown-button" id="dropdownButton">Categoría</button>
    <div class="dropdown-content" id="dropdown-categorias">
        <div data-categoria="todas" class="active">Todas</div>
        @foreach (var categoria in (ViewData["Categorias"] as List<paty22.Models.Categoria> ?? new List<paty22.Models.Categoria>()))
        {
            <div data-categoria="@categoria.Id">@categoria.Nombre</div>
        }
    </div>
</div>

<main class="col-md-9 col-lg-10 pt-4 container">
    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var producto in Model)
            {
                <div class="col-6 col-md-4 col-lg-3 mb-4 producto" data-categoria="@producto.CategoriaId" data-nombre="@producto.Nombre.ToLower()">
                    <div class="carta h-100 text-center">
                        <div class="carta-body">
                            <div class="imagen-placeholder mb-3">
                                <img src="@Url.Content(producto.ImageUrl ?? "/img/logo1.jpg")" loading="lazy" alt="@producto.Nombre" width="250" height="250" />
                            </div>
                            <h6 class="carta-title">@producto.Nombre</h6>
                            <p class="carta-text">@String.Format(new System.Globalization.CultureInfo("es-CL"), "{0:C0}", producto.Precio)</p>
                            <p class="carta-text">@producto.Descripcion </p>
                            <form asp-controller="Carro" asp-action="AgregarAlCarrito" method="post">
                                <input type="hidden" name="productoId" value="@producto.Id" />
                                <button type="submit" class="btn btn-secondary">Añadir al carro</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-products-message">No hay productos disponibles</div>
        }
    </div>
</main>

<script>
    const dropdownButton = document.getElementById('dropdownButton');
    const dropdownContent = document.getElementById('dropdown-categorias');
    const searchInput = document.getElementById('searchInput');
    const productos = document.querySelectorAll('.producto');
    const categoriasDiv = document.querySelectorAll('.dropdown-content div');

    dropdownButton.addEventListener('click', () => {
        dropdownContent.classList.toggle('show');
    });

    categoriasDiv.forEach(categoria => {
        categoria.addEventListener('click', function () {
            categoriasDiv.forEach(cat => cat.classList.remove('active'));
            categoria.classList.add('active');

            const categoriaId = categoria.getAttribute('data-categoria');
            filterProductsByCategory(categoriaId);
        });
    });

    searchInput.addEventListener('input', function () {
        const searchValue = searchInput.value.toLowerCase();
        productos.forEach(producto => {
            const productName = producto.getAttribute('data-nombre');
            producto.style.display = productName.includes(searchValue) ? 'block' : 'none';
        });
    });

    function filterProductsByCategory(categoriaId) {
        productos.forEach(producto => {
            const productCategory = producto.getAttribute('data-categoria');
            producto.style.display = categoriaId === 'todas' || productCategory === categoriaId ? 'block' : 'none';
        });
    }
</script>