@model IEnumerable<paty22.Models.Producto>

@using System.Linq
<html>
<head>
    <meta charset="utf-8">
    <title>Catálogo de Productos</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <!-- Google Web Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">

    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .titulo {
            font-size: 22px;
        }

        .precio {
            background-color: #3e3e3e;
            border-radius: 50px;
            color: white;
            padding: 5px 10px;
        }

        .container {
            display: flex;
            gap: 20px;
            padding: 20px;
        }

        .sidebar {
            width: 20%;
            background-color: #f8f8f8;
            padding: 15px;
            border-radius: 8px;
        }

        .filter-panel h3 {
            margin-bottom: 10px;
        }

        .filter-list {
            list-style: none;
            padding: 0;
        }

            .filter-list li {
                padding: 8px;
                cursor: pointer;
                border-radius: 4px;
            }

                .filter-list li.active {
                    background-color: #3e3e3e;
                    color: white;
                }

        .productos-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            width: 75%;
        }

        .producto {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            transition: transform 0.2s;
        }

            .producto:hover {
                transform: scale(1.05);
            }

            .producto img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 8px;
            }

        .acciones {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 10px;
        }

            .acciones button {
                background: none;
                border: none;
                cursor: pointer;
                font-size: 1.5rem;
            }

                .acciones button i {
                    color: #555;
                    transition: color 0.2s;
                }

                .acciones button:hover i {
                    color: #007bff;
                }

        .pagination {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            list-style: none;
            padding: 0;
        }

            .pagination .page-item {
                margin: 0 5px;
            }

                .pagination .page-item a {
                    text-decoration: none;
                    padding: 10px 15px;
                    color: #007bff;
                    border: 1px solid #ddd;
                    border-radius: 5px;
                }

                .pagination .page-item.active a {
                    background-color: #007bff;
                    color: white;
                }

        .search-bar {
            margin-bottom: 20px;
            text-align: center;
        }

        .search-input {
            padding: 10px;
            width: 50%;
            font-size: 16px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }

        .h11 {
            font-family: 'Roboto', sans-serif; 
            font-size: 50px; 
            font-weight: 700; 
            color: transparent; 
            background-image: linear-gradient(135deg, #5f5f5f, #979797); 
            -webkit-background-clip: text; 
            background-clip: text;
            text-transform: uppercase; 
            text-align: center; 
            letter-spacing: 3px;
            position: relative; 
            padding: 20px 0; 
        }

            .h11:hover {
                color: #aa2525; 
                text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3); 
                transform: scale(1.1); 
                transition: all 0.3s ease;
            }


    </style>
</head>
<body>

    <h1 class="h11"> Productos</h1>

    
    <div class="search-bar">
        <input type="text" id="searchInput" class="search-input" placeholder="Buscar productos...">
    </div>

    <div class="container">
       
        <div class="sidebar">
            <div class="filter-panel">
                <h3>Filtrar por precio</h3>
                <ul class="filter-list" id="priceFilters">
                    <li data-price="all" class="active">Todos los precios</li>
                    <li data-price="1200-5000">$1,200 - $5,000</li>
                    <li data-price="5000-10000">$5,000 - $10,000</li>
                    <li data-price="10000-15000">$10,000 - $15,000</li>
                    <li data-price="20000-24000">$20,000 - $24,000</li>
                </ul>

                <h3>Filtrar por categoría</h3>
                <ul class="filter-list" id="categoryFilters">
                    <li data-category="all" class="active">Todas las categorías</li>
                    @foreach (var categoria in (ViewData["Categorias"] as List<paty22.Models.Categoria> ?? new List<paty22.Models.Categoria>()))
                    {
                        <li data-category="@categoria.Id">@categoria.Nombre</li>
                    }
                </ul>
            </div>
        </div>

        
        <div class="productos-container" id="productosContainer">
            @if (Model != null && Model.Any())
            {
                foreach (var producto in Model)
                {
                    <div class="producto"
                         data-price="@producto.Precio"
                         data-category="@producto.CategoriaId"
                         data-name="@producto.Nombre">
                        <img src="@Url.Content(producto.ImageUrl ?? "/img/logo1.jpg")" alt="@producto.Nombre">
                        <h2 class="titulo">@producto.Nombre</h2>
                        <p class="precio">@String.Format(new System.Globalization.CultureInfo("es-CL"), "{0:C0}", producto.Precio)</p>
                        <p class="descripcion">@producto.Descripcion</p>
                        <div class="acciones">
                            <form asp-controller="Carro" asp-action="AgregarAlCarrito" method="post">
                                <input type="hidden" name="productoId" value="@producto.Id" />
                                <button type="submit"><i class="fa fa-shopping-cart"></i></button>
                            </form>
                            <button class="btn-favorito">
                                <i class="far fa-heart"></i>
                            </button>

                        </div>
                    </div>
                }
            }
            else
            {
                <p class="no-products">No hay productos disponibles.</p>
            }
        </div>
    </div>
    <button id="verFavoritos">Ver Favoritos</button>


    <div>Favoritos: <span id="contadorFavoritos">0</span></div>

    <ul class="pagination" id="pagination"></ul>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const favoritos = new Set(JSON.parse(localStorage.getItem('favoritos')) || []);

                
            const botonesFavorito = document.querySelectorAll('.btn-favorito');
            const productosContainer = document.getElementById('productosContainer');
            const paginationContainer = document.getElementById('pagination');
            const searchInput = document.getElementById('searchInput');
            const contadorFavoritos = document.getElementById('contadorFavoritos');

            
            const productosPorPagina = 8;
            let paginaActual = 1;

            
            let productosFiltrados = Array.from(document.querySelectorAll('.producto'));
            let precioSeleccionado = 'all';
            let categoriaSeleccionada = 'all';

        
            function mostrarPagina(pagina) {
                const inicio = (pagina - 1) * productosPorPagina;
                const fin = inicio + productosPorPagina;

                productosFiltrados.forEach((producto, index) => {
                    producto.style.display = (index >= inicio && index < fin) ? 'block' : 'none';
                });

                generarPaginacion();
            }

            
            function generarPaginacion() {
                const totalPaginas = Math.ceil(productosFiltrados.length / productosPorPagina);
                paginationContainer.innerHTML = '';

                for (let i = 1; i <= totalPaginas; i++) {
                    const pageItem = document.createElement('li');
                    pageItem.classList.add('page-item');
                    if (i === paginaActual) {
                        pageItem.classList.add('active');
                    }
                    const pageLink = document.createElement('a');
                    pageLink.classList.add('page-link');
                    pageLink.textContent = i;
                    pageLink.addEventListener('click', () => {
                        paginaActual = i;
                        mostrarPagina(paginaActual);
                    });
                    pageItem.appendChild(pageLink);
                    paginationContainer.appendChild(pageItem);
                }
            }

            
            function actualizarFavorito(boton, productoId) {
                const corazon = boton.querySelector('i');
                if (favoritos.has(productoId)) {
                    corazon.classList.remove('far', 'fa-heart');
                    corazon.classList.add('fas', 'fa-heart');
                } else {
                    corazon.classList.remove('fas', 'fa-heart');
                    corazon.classList.add('far', 'fa-heart');
                }

                contadorFavoritos.textContent = favoritos.size;
            }

            
            botonesFavorito.forEach(boton => {
                const productoId = parseInt(boton.getAttribute('data-id'));

               
                actualizarFavorito(boton, productoId);

                boton.addEventListener('click', () => {
                    if (favoritos.has(productoId)) {
                        favoritos.delete(productoId);
                    } else {
                        favoritos.add(productoId);
                    }

                    
                    localStorage.setItem('favoritos', JSON.stringify(Array.from(favoritos)));

                 
                    actualizarFavorito(boton, productoId);
                });
            });

            // Filtros y búsqueda
            document.querySelectorAll('#priceFilters li').forEach(filter => {
                filter.addEventListener('click', () => {
                    document.querySelectorAll('#priceFilters li').forEach(f => f.classList.remove('active'));
                    filter.classList.add('active');
                    precioSeleccionado = filter.getAttribute('data-price');
                    filtrarProductos();
                });
            });

            document.querySelectorAll('#categoryFilters li').forEach(filter => {
                filter.addEventListener('click', () => {
                    document.querySelectorAll('#categoryFilters li').forEach(f => f.classList.remove('active'));
                    filter.classList.add('active');
                    categoriaSeleccionada = filter.getAttribute('data-category');
                    filtrarProductos();
                });
            });

            searchInput.addEventListener('input', () => {
                filtrarProductos();
            });

            function filtrarProductos() {
                productosFiltrados = Array.from(document.querySelectorAll('.producto')).filter(producto => {
                    const precio = parseFloat(producto.getAttribute('data-price'));
                    const categoria = producto.getAttribute('data-category');
                    const nombre = producto.getAttribute('data-name').toLowerCase();
                    const searchQuery = searchInput.value.toLowerCase();

                    let visible = true;

                    if (precioSeleccionado !== 'all') {
                        const [min, max] = precioSeleccionado.split('-').map(Number);
                        visible = visible && precio >= min && precio <= max;
                    }

                    if (categoriaSeleccionada !== 'all') {
                        visible = visible && categoria === categoriaSeleccionada;
                    }

                    if (searchQuery && !nombre.includes(searchQuery)) {
                        visible = false;
                    }

                    producto.style.display = visible ? 'block' : 'none';
                    return visible;
                });

                paginaActual = 1;
                mostrarPagina(paginaActual);
            }

           
            document.getElementById('verFavoritos').addEventListener('click', (e) => {
                e.preventDefault();

                const favoritosArray = Array.from(favoritos);

                axios.post('/Productos/Favoritos', favoritosArray)
                    .then(response => {
                        if (response.status === 200) {
                            window.location.href = '/Productos/Favoritos';
                        }
                    })
                    .catch(error => {
                        console.error('Error al enviar los favoritos:', error);
                    });
                console.log(favoritosArray); // Verifica que es un arreglo de IDs

            });


            // Inicializar la vista
            contadorFavoritos.textContent = favoritos.size;
            mostrarPagina(paginaActual);
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


   

</body>
</html>
